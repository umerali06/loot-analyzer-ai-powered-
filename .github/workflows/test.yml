name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Create .env.local for testing
      run: |
        echo "JWT_SECRET=test-jwt-secret" > .env.local
        echo "JWT_REFRESH_SECRET=test-refresh-secret" >> .env.local
        echo "MONGODB_URI=mongodb://localhost:27017/test" >> .env.local
        echo "REDIS_URL=redis://localhost:6379" >> .env.local

    - name: Run linting
      run: npm run lint

    - name: Run type checking
      run: npx tsc --noEmit

    - name: Run unit tests
      run: npm run test:ci
      env:
        CI: true

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  e2e:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Create .env.local for testing
      run: |
        echo "JWT_SECRET=test-jwt-secret" > .env.local
        echo "JWT_REFRESH_SECRET=test-refresh-secret" >> .env.local
        echo "MONGODB_URI=mongodb://localhost:27017/test" >> .env.local
        echo "REDIS_URL=redis://localhost:6379" >> .env.local

    - name: Run Playwright tests
      run: npm run test:e2e
      env:
        CI: true

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report-${{ matrix.node-version }}
        path: |
          playwright-report/
          test-results/
        retention-days: 30

  security:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Create .env.local for testing
      run: |
        echo "JWT_SECRET=test-jwt-secret" > .env.local
        echo "JWT_REFRESH_SECRET=test-refresh-secret" >> .env.local

    - name: Run security checks
      run: npm run security-check

  quality-gates:
    runs-on: ubuntu-latest
    needs: [test, e2e, security]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Check test coverage threshold
      run: |
        npm run test:coverage
        COVERAGE=$(cat coverage/coverage-summary.json | jq -r '.total.lines.pct')
        if (( $(echo "$COVERAGE < 80" | bc -l) )); then
          echo "Test coverage $COVERAGE% is below 80% threshold"
          exit 1
        fi
        echo "Test coverage $COVERAGE% meets threshold"

    - name: Quality Gate Passed
      run: echo "ðŸŽ‰ All quality gates passed!"
